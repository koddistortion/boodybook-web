imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: de
    fallback_locale: en
    locales: [de, en]

framework:
    #esi: ~
    translator: { fallbacks: ['%fallback_locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'Form/fields.html.twig'

    globals:
      lang:
        locale: '%locale%'
        locales: '%locales%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: '%database_driver%'
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    filters:
        cssrewrite: ~
        lessphp:
            file: "%kernel.root_dir%/../vendor/oyejorge/less.php/lessc.inc.php"
            apply_to: '\.less$'
            formatter: "classic"

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Koddistortion\BodyBook\PlatformBundle\Entity\User
    service:
      mailer: fos_user.mailer.twig_swift

    registration:
      form:
        type: Koddistortion\BodyBook\PlatformBundle\Form\RegisterFormType
      confirmation:
        enabled: true

    from_email:
        address: "%mailer_from_address%"
        sender_name: "BodyBook"

stof_doctrine_extensions:
   default_locale: "%locale%"
   translation_fallback:  true
   persist_default_translation:  false
   uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       "%kernel.root_dir%/../web/uploads"

        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter

        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
   orm:
       default:
           sluggable: true
           timestampable: true
           loggable: true
           tree: true
           translatable: true
           sortable: true
           blameable: true
           uploadable: true
           softdeleteable: true

jms_i18n_routing:
    default_locale: '%locale%'
    locales: '%locales%'
    strategy: prefix

hwi_oauth:
    firewall_names:              [main]

    resource_owners:
        google:
            type:                google
            client_id:           "%oauth_google_client_id%"
            client_secret:       "%oauth_google_client_secret%"
            scope:               "openid email profile"
        twitter:
            type:                twitter
            client_id:           "%oauth_twitter_client_id%"
            client_secret:       "%oauth_twitter_client_secret%"
            options:
              include_email:     true
        facebook:
            type:                facebook
            client_id:           "%oauth_facebook_client_id%"
            client_secret:       "%oauth_facebook_client_secret%"
            scope:               "email public_profile"
            options:
                auth_type: rerequest # Re-asking for Declined Permissions